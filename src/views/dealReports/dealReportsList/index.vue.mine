<template>
  <!-- 成交报告列表 -->
  <div class="deal-reports-list">
    <div class="d-r-l-top">
      <div class="left">
        <div
          v-for="(item, index) in tabList"
          :key="index"
          :class="{ active: index === currentTabIndex }"
          @click="changeTab(item)"
        >{{ item.name }}({{ item.num }})</div>
      </div>
      <div class="right">
        <div class="normal-btn" @click="addReport">
          <img src="../../../assets/images/public/edit_200.png" alt />
          <span>新增合同</span>
        </div>
        <!-- <div class="normal-btn">
          <img src="../../../assets/images/public/400_setting.png" alt />
          <span>管理配置</span>
        </div>
        <div class="normal-btn">
          <img src="../../../assets/images/public/copy.png" alt />
          <span>批量审批</span>
        </div>
        <div class="normal-btn">
          <img src="../../../assets/images/public/copy.png" alt />
          <span>批量反审批</span>
        </div>-->
        <div class="normal-btn" @click="exportedFun()" v-if="exportAuth">
          <img src="../../../assets/images/public/u_Export.png" alt />
          <span>导出</span>
        </div>
        <div class="search-btn">
          <!-- <el-input
            class="search-btn-input"
            placeholder="请输入合同相关信息"
            suffix-icon="el-icon-search"
          ></el-input>-->
          <searchInput placeholder="请输入合同相关信息" @Kwd="kwdVal" @kwdSearch="kwdSearch"></searchInput>
        </div>
        <div class="page-box">
          <!-- <div class="normal">&lt;</div>
          <div class="normal">&gt;</div>
          <input type="text" class="input-box" />
          <div class="normal">GO</div>
          <div class="num">共{{ totalPage }}页，{{ total }}条</div>-->
          <div class="normal" @click.stop="lastPage">&lt;</div>
          <div class="normal" @click.stop="nextPage">&gt;</div>
          <el-input
            class="input-box"
            v-only-number
            @input="paginationChange"
            @blur="blurChange"
            v-model="pageNum"
            style="width: 0.35rem"
          ></el-input>
          <div class="normal" @click.stop="paginationData">GO</div>
          <div class="num">共{{ totalPage || 0 }}页，{{ total || 0 }}条</div>
        </div>

        <!-- 宽/窄类别切换 -->
        <div class="change-box">
          <div
            class="broad-btn"
            :class="!narrowListShow ? 'active' : ''"
            @click="narrowListShow = false"
          ></div>
          <div
            class="narrow-btn"
            :class="narrowListShow ? 'active' : ''"
            @click="narrowListShow = true"
          ></div>
        </div>
      </div>
    </div>

    <div class="d-r-l-content" v-if="listData.length !== 0 && !isLoading">
      <!-- 宽列表 -->
      <broadList
        v-show="!narrowListShow"
        :listType="listType"
        :listData="listData"
        :hasNewBuildSeeAuth="hasNewBuildSeeAuth"
        :hasOldSeeAuth="hasOldSeeAuth"
        @showDetail="showDetail"
      ></broadList>
      <!-- 窄列表 -->
      <narrowList
        v-show="narrowListShow"
        :listType="listType"
        :listData="listData"
        @showDetail="showDetail"
        :narrowNavListForSale="narrowNavListForSale"
        :narrowNavListForNewBuild="narrowNavListForNewBuild"
        :hasNewBuildSeeAuth="hasNewBuildSeeAuth"
        :hasOldSeeAuth="hasOldSeeAuth"
      ></narrowList>
    </div>

    <no-data v-if="listData.length === 0 && !isLoading" class="no_data"></no-data>

    <!-- 二手房详情弹窗 -->
    <erShouDealReportDetail
      :isShow.sync="isShowDetailForSale"
      :dealId="currentDealIdForSale"
      :hasOldExportAuth="hasOldExportAuth"
      :hasOldSeeAuth="hasOldSeeAuth"
    ></erShouDealReportDetail>

    <!-- 新房详情 -->
    <newHouseDealReportDetail
      :isShow.sync="isShowDetailForNewBuild"
      :dealId="currentDealIdForNewBuild"
      :hasNewBuildSeeAuth="hasNewBuildSeeAuth"
    ></newHouseDealReportDetail>
  </div>
</template>

<script>
import {
  getMlDealListRequest,
  getMlDealList,
  getNewReportListRequest,
  getNewReportList,
} from "@/net/dealReports/dealReportsList.js";

import {
  GetReportMetrics,
  GetMlDealCountStatistics,
} from "../../../net/dealReports/getDealListTabInfo";

import checkBoxOnly from "@/views/dealReports/erShouDealReports/components/checkBoxOnly.vue";
import erShouDealReportDetail from "@/views/dealReports/erShouDealReports/erShouDealReportDetail/index.vue";
import newHouseDealReportDetail from "../newHouseDealReport/detailComponets/index";
import noData from "@/views/dealReports/erShouDealReports/components/noData.vue";
import broadList from "./components/broadList";
import narrowList from "./components/narrowList";
import searchInput from "../../../components/form/searchInput";
import {
  GetBaseInfoModel,
  SetBaseInfoModel,
} from "../../../model/BaseInfoModel";
import {
  GetUserOpers,
  GetUserOpersRequest,
} from "../../../net/common/GetUserOpers";
import { ErpCommon } from "../../../utils/ErpCommon";

export default {
  data() {
    return {
      isLoading: true,
      totalPage: 1, //总页数
      total: 1, //总条数
      pageNum: 1, //当前页码
      currentTabIndex: 3,
      exportAuth: false,
      hasNewBuildExportAuth: false, //新房导出权
      hasNewBuildSeeAuth: false, //新房核心查看权
      hasOldExportAuth: false, //二手房导出权
      hasOldSeeAuth: false, //二手房核心查看权
      paramsObjForSale: new getMlDealListRequest(), // 二手房请求参数
      paramsObjForNewBuild: new getNewReportListRequest(), // 二手房请求参数
      tabList: [
        { index: 0, name: "售单", value: "1", num: 0, listType: 1 },
        { index: 1, name: "租单", value: "2", num: 0, listType: 1 },
        { index: 2, name: "二手合作", value: "3", num: 0, listType: 1 },
        { index: 3, name: "新房售", value: "1", num: 0, listType: 2 },
        { index: 4, name: "新房租", value: "2", num: 0, listType: 2 },
        { index: 5, name: "新房合作", value: "3", num: 0, listType: 2 },
      ],
      isShowDetailForSale: false,
      isShowDetailForNewBuild: false,
      currentDealIdForSale: "",
      currentDealIdForNewBuild: "",
      listType: 2, // 请求列表类型 1=二手房，2=新房
      listData: [], // 列表数据
      narrowListShow: true, // 展示宅列表
      //宅列表字段 ： 二手房
      narrowNavListForSale: [
        { name: "状态", key: "" },
        { name: "交易状态", key: "" },
        { name: "成交类型", key: "dealTypeCn" },
        { name: "成交报告编号", key: "dealNo" },
        { name: "主单号", key: "" },
        { name: "类别", key: "cooperationCn" },
        { name: "物业名称", key: "dealHouseInfo" },
        { name: "成交日期", key: "dealDateFormate" },
        { name: "合作方式", key: "cooperationTypeCn" },
        { name: "客户", key: "buyName" },
        { name: "业主", key: "sellName" },
        { name: "成交组别", key: "orgName" },
        { name: "成交人员", key: "userName" },
        { name: "收佣状态", key: "" },
        { name: "过户状态", key: "" },
        { name: "合同编号", key: "" },
        { name: "成交总价", key: "dealPriceCn" },
        { name: "业主佣金", key: "sellOwnerCommsion" },
        { name: "客户佣金", key: "buyCustomerCommsion" },
        { name: "建筑面积", key: "houseAreaCn" },
        { name: "扣合作费", key: "cooperationCostCn" },
        { name: "关联盘源", key: "" },
        { name: "意向单编号", key: "" },
        { name: "制单人", key: "createUName" },
        { name: "制单日期", key: "" },
      ],
      // 宅列表字段 ： 新房
      narrowNavListForNewBuild: [
        { name: "状态", key: "" }, //暂不做
        { name: "交易状态", key: "" }, //暂不做
        { name: "成交类型", key: "reportTypeCn" },
        { name: "成交报告编号", key: "reportNo" },
        { name: "主单号", key: "reportCommissionNo" },
        { name: "类别", key: "reportClassCn" },
        { name: "项目名称", key: "buildName" },
        { name: "物业名称", key: "dealHouseInfo" },
        { name: "成交日期", key: "dealTimeFormate" },
        { name: "合作方式", key: "cooperationTypeCn" },
        { name: "客户", key: "custName" },
        { name: "开发商", key: "developerName" },
        { name: "成交组别", key: "userOrgName" },
        { name: "成交人员", key: "userName" },
        { name: "收佣状态", key: "commissionStatusCn" },
        { name: "合同编号", key: "offerNo" },
        { name: "成交总价", key: "offerAmountCn" },
        { name: "业主佣金", key: "" }, //暂不做
        { name: "客户佣金", key: "custCommission" },
        { name: "建筑面积", key: "houseAreaCn" },
        { name: "扣合作费", key: "cooperationfeeCn" },
        { name: "关联盘源", key: "" }, //暂不做
        { name: "意向单编号", key: "" }, //暂不做
        { name: "制单人", key: "createUserName" },
        { name: "制单日期", key: "createTimeFormate" },
      ],
    };
  },
  components: {
    searchInput,
    checkBoxOnly,
    erShouDealReportDetail,
    newHouseDealReportDetail,
    noData,
    broadList,
    narrowList,
  },
  created() {
    window.toWebParameter = this.toWebParameter;
    //初始化权限
    this.initUserOpers();
    //测试用请求
    this.initData();
    //获取成交列表各tap的数据总条数
    this.getListToals();
  },
  methods: {
    //初始化权限
    async initUserOpers() {
      console.log("--成交报告列表权限初始化开始--");
      let userId = new ErpCommon().getOperator("USER_ID"); //

      if (!userId) return;

      let userOpers = await new GetUserOpers(
        new GetUserOpersRequest({ userId: userId })
      ).send();
      SetBaseInfoModel.setUserOpers(userOpers);
      this.hasNewBuildExportAuth = this.$UserPermission.NEWBUILD_EXPORT();
      this.hasNewBuildSeeAuth = this.$UserPermission.DEAL_REPORT_CORE_SEE();
      this.hasOldExportAuth = this.$UserPermission.SECOND_HOUSE_EXPORT();
      this.hasOldSeeAuth = this.$UserPermission.SECOND_DEAL_REPORT_CORE_SEE();
      console.log(
        "--成交报告列表权限初始化完成--",
        "新房导出权：",
        this.hasNewBuildExportAuth,
        "新房核心查看权：",
        this.hasNewBuildSeeAuth,
        "二手房导出权：",
        this.hasOldExportAuth,
        "二手房核心查看权：",
        this.hasOldSeeAuth
      );
    },
    //获取成交列表各tap的数据总条数
    async getListToals() {
      let newBuildTabInfo = []; //新房
      let oldBuildTabInfo = {}; //二手房
      //新房列表总数
      await new GetReportMetrics()
        .send()
        .then((res) => {
          newBuildTabInfo = res || [];
        })
        .catch((err) => {
          this.$erpCommon.toast(
            err.errMsg || "服务器开小差了,请稍后再试",
            "error"
          );
        });
      //二手房列表总数
      await new GetMlDealCountStatistics()
        .send()
        .then((res) => {
          oldBuildTabInfo = res || {};
        })
        .catch((err) => {
          this.$erpCommon.toast(
            err.errMsg || "服务器开小差了,请稍后再试",
            "error"
          );
        });
      //处理对应条数
      let newListTotal = this.getMapTotal(newBuildTabInfo);
      this.tabList[0].num = oldBuildTabInfo.saleCount || 0;
      this.tabList[1].num = oldBuildTabInfo.rentCount || 0;
      this.tabList[2].num = oldBuildTabInfo.cooperationCount || 0;
      this.tabList[3].num = newListTotal["1"] || 0;
      this.tabList[4].num = newListTotal["2"] || 0;
      this.tabList[5].num = newListTotal["3"] || 0;
    },
    //新房获取对应条数
    getMapTotal(arr) {
      let obj = {
        "1": 0,
        "2": 0,
        "3": 0,
      };
      for (let item of arr) {
        obj[item.type] = item.total;
      }
      return obj;
    },
    // ERP传参获取数据
    toWebParameter(erpParamsJsonString) {
      console.log("ERP传参数获取数据：", erpParamsJsonString);
      let erpParamsJson = JSON.parse(erpParamsJsonString);

      //测试/兼容
      if (erpParamsJson.dealPrice == ",") erpParamsJson.dealPrice = "";

      // 处理二手房参数
      if (this.listType == 1) {
        for (let key in this.paramsObjForSale) {
          this.paramsObjForSale[key] =
            erpParamsJson[key] || this.paramsObjForSale[key];
        }
      }
      //单独处理新房请求参数
      // for (let key in this.paramsObjForNewBuild) {
      //   this.paramsObjForNewBuild[key] = erpParamsJson[key] || this.paramsObjForNewBuild[key];
      // }
      if (this.listType == 2) {
        for (let key in erpParamsJson) {
          this.paramsObjForNewBuild[key] =
            erpParamsJson[key] || this.paramsObjForNewBuild[key];
        }
        //额外处理新房请求字段
        // this.paramsObjForNewBuild.timeType = erpParamsJson.queryDateType;//暂不做
        delete this.paramsObjForNewBuild.timeType;
        this.paramsObjForNewBuild.timeStartStr = erpParamsJson.queryDateS;
        this.paramsObjForNewBuild.timeEndStr = erpParamsJson.queryDateE;
        // this.paramsObjForNewBuild.reportClass = erpParamsJson.contractType;//暂不做
        delete this.paramsObjForNewBuild.reportClass;
        this.paramsObjForNewBuild.offerAmount = erpParamsJson.dealPrice;
        this.paramsObjForNewBuild.cooperationType = erpParamsJson.cooperateType;
        this.paramsObjForNewBuild.isCooperationfee =
          erpParamsJson.hasCooperateFee;
        this.paramsObjForNewBuild.orderByColumn = erpParamsJson.orderByColumn;
        this.paramsObjForNewBuild.orderByType = erpParamsJson.orderByType;
        this.paramsObjForNewBuild.dealUserId = erpParamsJson.userId;
        this.paramsObjForNewBuild.dealUserOrganizationId = erpParamsJson.orgId;
      }

      this.initData();
    },
    // 获取列表数据
    async initData() {
      this.isLoading = true;
      let data = {};
      if (this.listType == 1) {
        //导出权赋值
        this.exportAuth = this.hasOldExportAuth;
        //请求二手房成交报告列表
        //测试数据
        // this.paramsObjForSale.auditStatus = 0;
        // this.paramsObjForSale.billStatus = 1;
        // this.paramsObjForSale.commissionStatus = 0;
        // this.paramsObjForSale.cooperateType = 1;
        // this.paramsObjForSale.dealPrice = "5201244, ";
        // this.paramsObjForSale.hasCooperateFee = 1;
        // this.paramsObjForSale.hasHouseDeal = 1;
        // this.paramsObjForSale.orgId = 0;
        // this.paramsObjForSale.queryDateE = "2020-08-06 00:00:00";
        // this.paramsObjForSale.queryDateS = "2020-08-02 00:00:00";
        // this.paramsObjForSale.queryUserType = "1";
        // this.paramsObjForSale.transactionType = "1";
        // this.paramsObjForSale.userId = "20333992";
        let paramsObj = this.paramsObjForSale;
        data = await new getMlDealList(paramsObj).send();
      } else {
        //导出权赋值
        this.exportAuth = this.hasNewBuildExportAuth;
        //请求新房房成交报告列表
        let paramsObj = {
          dealType: 1,
          orderByColumn: "3",
          pageOffset: 1,
          pageRows: 2,
        };
        console.log(this.paramsObjForNewBuild, "新房相关请求参数");
        // let paramsObj = this.paramsObjForNewBuild
        data = await new getNewReportList(paramsObj).send();
      }
      console.log("data:", data);

      if (!data) {
        this.isLoading = false;
      }

      this.listData = data.list || []; //列表数据
      //更新tap总条数
      this.tabList[this.currentTabIndex].num = data.total || 0;
      this.total = data.total || 0;
      this.totalPage = data.totalPage || 1;
      this.pageNum = data.pageNum || 1;
      this.isLoading = false;
    },
    // 切换tab  (tabList):
    changeTab(item) {
      this.currentTabIndex = item.index;
      this.listType = item.listType;
      //同时需要切换筛选条件
      if (this.listType == 1) {
        this.paramsObjForSale.dealType = item.value;
      } else {
        this.paramsObjForNewBuild.tabType = item.value;
      }
      //二手房和新房筛选条件需要动态切换隐藏
      new ErpCommon().hidebut(item.listType);

      this.initData(); //请求列表数据
    },

    // check状态改变
    checkChange(value, index) {
      this.listData[index].isChecked = value;
    },
    // 查看详情
    showDetail(data) {
      if (this.listType == 1) {
        this.currentDealIdForSale = data.dealId;
        this.isShowDetailForSale = true;
      } else {
        this.currentDealIdForNewBuild = data.dealId;
        this.isShowDetailForNewBuild = true;
      }
    },
    //关键字检索
    kwdSearch(data) {
      console.log(data, "关键ffffff字");
      if (this.listType == 1) {
        this.paramsObjForSale.keyWords = data || "";
      } else {
        this.paramsObjForNewBuild.keyWords = data || "";
      }
      this.initData();
    },
    // 关键字
    kwdVal(data) {
      console.log(data, "hhhhhhhhhhh");
    },
    // 新增成交报告
    addReport() {
      let addReportUrl =
        this.listType == 1 ? "/addErShouDealReport" : "/addNewHouseDealReport";
      // 需要先隐藏顶部导航条
      new ErpCommon().bShowAuditFilter(false);
      this.$router.push({ path: addReportUrl, query: {} });
    },
    //导出
    async exportedFun() {
      console.log("这是导出哈哈哈哈");
      let params = {};
      let fileName = "";
      let headList = [];
      let data = [];
      // 导出参数
      if (this.listType == 1) {
        fileName = "二手成交报告列表";
        headList = this.narrowNavListForSale;
        let exportParam = JSON.parse(JSON.stringify(this.paramsObjForSale));
        exportParam.export = 1;
        // 导出接口
        let info = await new getMlDealList(exportParam).send();
        data = info.list || [];
      } else {
        fileName = "新房成交报告列表";
        headList = this.narrowNavListForNewBuild;
        // let exportParam = JSON.parse(JSON.stringify(this.paramsObjForNewBuild));
        let exportParam = {
          dealType: 1,
          orderByColumn: "3",
          pageOffset: 1,
          pageRows: 10,
        };
        exportParam.export = 1;
        // 导出接口
        let info = await new getNewReportList(exportParam).send();
        data = info.list || [];
      }
      console.log(data, "接口数据");

      //导出数据表模板
      params = {
        fileName,
        headList,
        data: data,
      };
      //去除非导出数据
      // data.forEach((key) => {

      // });
      console.log(params, "--导出参数--");
      console.log(params.fileName, "表头");
      new ErpCommon().exportExcelData(params);
    },
    //分页相关处理
    lastPage() {
      if (this.pageNum <= 1) return;
      this.pageNum = this.pageNum - 1;
      this.initData();
    },
    nextPage() {
      if (this.pageNum >= this.totalPage) return;
      this.pageNum = this.pageNum + 1;
      this.initData();
    },
    paginationChange() {
      let pageOffset = this.pageNum;
      if (pageOffset === 0) {
        pageOffset = 1;
      }
      if (pageOffset >= this.totalPage) {
        pageOffset = this.totalPage == 0 ? 1 : this.totalPage;
      }
      this.pageNum = pageOffset;
    },
    blurChange() {
      console.log(11111111111);
      let pageOffset = this.pageNum;
      if (pageOffset <= 1 || pageOffset == "") {
        pageOffset = 1;
      }
      this.pageNum = pageOffset;
    },
    paginationData() {
      this.initData();
      console.log("--查询--");
    },
  },
};
</script>

<style lang="less" scoped>
/*修改滚动条样式*/
div::-webkit-scrollbar {
  width: 0.08rem;
  height: 0.08rem;
}
@baseHeight: 0.3rem;
@borderColor: #d8e2e7;

.deal-reports-list {
  width: 100%;
  min-width: 14.4rem;
  // height: calc(~"100% - 0.33rem");
  height: 100%;
  .d-r-l-top {
    width: 100%;
    // height: auto;
    height: 0.42rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    background-color: #efefef;
    border: 0.01rem solid #cecece;
    padding: 0 0.06rem;
    box-sizing: border-box;
    & > .left {
      display: flex;
      height: 0.4rem;
      align-items: flex-end;
      & > div {
        width: 0.8rem;
        height: 0.3rem;
        line-height: 0.3rem;
        text-align: center;
        color: #999999;
        border: 0.01rem solid #cecece;
        border-bottom: 0.01rem solid #efefef;
        margin-left: 0.08rem;
        cursor: pointer;
        &.active {
          height: 0.31rem;
          line-height: 0.31rem;
          color: #000000;
          border-bottom: 0.01rem solid #ffffff;
          background-color: #ffffff;
          margin-bottom: -0.01rem;
        }
      }
    }
    & > .right {
      display: flex;
      align-items: center;
      white-space: nowrap;
      & > .normal-btn {
        display: flex;
        align-items: center;
        margin-right: 0.15rem;
        cursor: pointer;
        & > img {
          width: auto;
          height: auto;
          max-height: 0.13rem;
          display: block;
          margin-right: 0.08rem;
        }
        & > span {
          font-size: 0.12rem;
          color: #259cf3;
        }
      }
      & > .search-btn {
        width: 1.77rem;
        /deep/ .search-btn-input {
          font-size: 0.12rem;
          .el-input__inner {
            height: 0.24rem;
            line-height: 0.24rem;
            padding-right: 0.3rem;
            border-radius: 0.1rem;
          }
          .el-input__icon {
            height: 0.24rem;
            line-height: 0.24rem;
          }
        }
      }
      // & > .page-box {
      //   display: flex;
      //   align-items: center;
      //   margin-left: 0.08rem;
      //   margin-right: 0.1rem;
      //   & > .normal {
      //     font-family: "宋体";
      //     width: 0.2rem;
      //     height: 0.2rem;
      //     line-height: 0.2rem;
      //     text-align: center;
      //     font-size: 0.12rem;
      //     color: #bbbbbb;
      //     background-color: #e0e0e0;
      //     border-radius: 0.04rem;
      //     margin-right: 0.08rem;
      //     cursor: pointer;
      //     &:hover {
      //       background-color: #259cf3;
      //       color: #ffffff;
      //     }
      //   }
      //   & > .input-box {
      //     width: 0.35rem;
      //     height: 0.2rem;
      //     border-radius: 0.04rem;
      //     margin-right: 0.08rem;
      //     border: none;
      //     text-align: center;
      //     font-size: 0.12rem;
      //   }
      //   & > .num {
      //     font-size: 0.12rem;
      //     color: #999999;
      //   }
      // }
      & > .page-box {
        display: flex;
        align-items: center;
        margin-right: 0.1rem;
        -moz-user-select: none;
        -khtml-user-select: none;
        user-select: none;

        /deep/ .el-input--small .el-input__inner {
          height: 0.205rem;
          padding: 0 8px;
          line-height: normal;
          text-align: center;
        }

        & > .normal {
          width: 0.2rem;
          height: 0.2rem;
          line-height: 0.2rem;
          text-align: center;
          font-size: 0.12rem;
          color: #bbbbbb;
          background-color: #e0e0e0;
          border-radius: 0.04rem;
          margin-right: 0.08rem;
          cursor: pointer;

          &:hover {
            background-color: #259cf3;
            color: #ffffff;
          }
        }

        & > .input-box {
          width: 0.35rem;
          height: 0.2rem;
          border-radius: 0.04rem;
          margin-right: 0.08rem;
          text-align: center;
          font-size: 0.12rem;
        }

        & > .num {
          font-size: 0.12rem;
          color: #999999;
        }
      }
      & > .change-box {
        display: flex;
        align-items: center;
        & > div {
          position: relative;
          cursor: pointer;
          width: 0.29rem;
          height: 0.22rem;
          flex: 1;
          background-position: center center;
          background-repeat: no-repeat;
          background-size: 100% 100%;
          &.broad-btn {
            background-image: url("../../../assets/images/public/table_width_icon_200.png");
          }
          &.broad-btn.active {
            background-image: url("../../../assets/images/public/table_width_icon_clicked_200.png");
          }
          &.narrow-btn {
            background-image: url("../../../assets/images/public/table_narr_icon_200.png");
          }
          &.narrow-btn.active {
            background-image: url("../../../assets/images/public/table_narr_icon_clicked_200.png");
          }
        }
      }
    }
  }
  .d-r-l-content {
    width: 100%;
    height: calc(~"100% - 0.42rem");
    background-color: #edf3fb;
    overflow: auto;
  }
}
.no_data {
  height: calc(~"100% - 0.42rem");
}
</style>
